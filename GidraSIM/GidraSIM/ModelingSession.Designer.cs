//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace GidraSIM
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class ModelingSessionEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект ModelingSessionEntities, используя строку соединения из раздела "ModelingSessionEntities" файла конфигурации приложения.
        /// </summary>
        public ModelingSessionEntities() : base("name=ModelingSessionEntities", "ModelingSessionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ModelingSessionEntities.
        /// </summary>
        public ModelingSessionEntities(string connectionString) : base(connectionString, "ModelingSessionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ModelingSessionEntities.
        /// </summary>
        public ModelingSessionEntities(EntityConnection connection) : base(connection, "ModelingSessionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Modeling_Process> Modeling_Process
        {
            get
            {
                if ((_Modeling_Process == null))
                {
                    _Modeling_Process = base.CreateObjectSet<Modeling_Process>("Modeling_Process");
                }
                return _Modeling_Process;
            }
        }
        private ObjectSet<Modeling_Process> _Modeling_Process;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ModelingProcedures> ModelingProcedures
        {
            get
            {
                if ((_ModelingProcedures == null))
                {
                    _ModelingProcedures = base.CreateObjectSet<ModelingProcedures>("ModelingProcedures");
                }
                return _ModelingProcedures;
            }
        }
        private ObjectSet<ModelingProcedures> _ModelingProcedures;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Modeling_Process. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToModeling_Process(Modeling_Process modeling_Process)
        {
            base.AddObject("Modeling_Process", modeling_Process);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ModelingProcedures. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToModelingProcedures(ModelingProcedures modelingProcedures)
        {
            base.AddObject("ModelingProcedures", modelingProcedures);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelingSessionModel", Name="Modeling_Process")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Modeling_Process : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Modeling_Process.
        /// </summary>
        /// <param name="results_id">Исходное значение свойства results_id.</param>
        /// <param name="name_process">Исходное значение свойства Name_process.</param>
        /// <param name="parent_process_id">Исходное значение свойства Parent_process_id.</param>
        /// <param name="allTime">Исходное значение свойства AllTime.</param>
        /// <param name="accidents">Исходное значение свойства Accidents.</param>
        /// <param name="procedures_number">Исходное значение свойства Procedures_number.</param>
        /// <param name="subprocesses_number">Исходное значение свойства Subprocesses_number.</param>
        public static Modeling_Process CreateModeling_Process(global::System.Int32 results_id, global::System.String name_process, global::System.String parent_process_id, global::System.String allTime, global::System.String accidents, global::System.Int32 procedures_number, global::System.Int32 subprocesses_number)
        {
            Modeling_Process modeling_Process = new Modeling_Process();
            modeling_Process.results_id = results_id;
            modeling_Process.Name_process = name_process;
            modeling_Process.Parent_process_id = parent_process_id;
            modeling_Process.AllTime = allTime;
            modeling_Process.Accidents = accidents;
            modeling_Process.Procedures_number = procedures_number;
            modeling_Process.Subprocesses_number = subprocesses_number;
            return modeling_Process;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 results_id
        {
            get
            {
                return _results_id;
            }
            set
            {
                if (_results_id != value)
                {
                    Onresults_idChanging(value);
                    ReportPropertyChanging("results_id");
                    _results_id = StructuralObject.SetValidValue(value, "results_id");
                    ReportPropertyChanged("results_id");
                    Onresults_idChanged();
                }
            }
        }
        private global::System.Int32 _results_id;
        partial void Onresults_idChanging(global::System.Int32 value);
        partial void Onresults_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_process
        {
            get
            {
                return _Name_process;
            }
            set
            {
                OnName_processChanging(value);
                ReportPropertyChanging("Name_process");
                _Name_process = StructuralObject.SetValidValue(value, false, "Name_process");
                ReportPropertyChanged("Name_process");
                OnName_processChanged();
            }
        }
        private global::System.String _Name_process;
        partial void OnName_processChanging(global::System.String value);
        partial void OnName_processChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Parent_process_id
        {
            get
            {
                return _Parent_process_id;
            }
            set
            {
                OnParent_process_idChanging(value);
                ReportPropertyChanging("Parent_process_id");
                _Parent_process_id = StructuralObject.SetValidValue(value, false, "Parent_process_id");
                ReportPropertyChanged("Parent_process_id");
                OnParent_process_idChanged();
            }
        }
        private global::System.String _Parent_process_id;
        partial void OnParent_process_idChanging(global::System.String value);
        partial void OnParent_process_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllTime
        {
            get
            {
                return _AllTime;
            }
            set
            {
                OnAllTimeChanging(value);
                ReportPropertyChanging("AllTime");
                _AllTime = StructuralObject.SetValidValue(value, false, "AllTime");
                ReportPropertyChanged("AllTime");
                OnAllTimeChanged();
            }
        }
        private global::System.String _AllTime;
        partial void OnAllTimeChanging(global::System.String value);
        partial void OnAllTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Accidents
        {
            get
            {
                return _Accidents;
            }
            set
            {
                OnAccidentsChanging(value);
                ReportPropertyChanging("Accidents");
                _Accidents = StructuralObject.SetValidValue(value, false, "Accidents");
                ReportPropertyChanged("Accidents");
                OnAccidentsChanged();
            }
        }
        private global::System.String _Accidents;
        partial void OnAccidentsChanging(global::System.String value);
        partial void OnAccidentsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Procedures_number
        {
            get
            {
                return _Procedures_number;
            }
            set
            {
                OnProcedures_numberChanging(value);
                ReportPropertyChanging("Procedures_number");
                _Procedures_number = StructuralObject.SetValidValue(value, "Procedures_number");
                ReportPropertyChanged("Procedures_number");
                OnProcedures_numberChanged();
            }
        }
        private global::System.Int32 _Procedures_number;
        partial void OnProcedures_numberChanging(global::System.Int32 value);
        partial void OnProcedures_numberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Subprocesses_number
        {
            get
            {
                return _Subprocesses_number;
            }
            set
            {
                OnSubprocesses_numberChanging(value);
                ReportPropertyChanging("Subprocesses_number");
                _Subprocesses_number = StructuralObject.SetValidValue(value, "Subprocesses_number");
                ReportPropertyChanged("Subprocesses_number");
                OnSubprocesses_numberChanged();
            }
        }
        private global::System.Int32 _Subprocesses_number;
        partial void OnSubprocesses_numberChanging(global::System.Int32 value);
        partial void OnSubprocesses_numberChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelingSessionModel", Name="ModelingProcedures")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModelingProcedures : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ModelingProcedures.
        /// </summary>
        /// <param name="prosedure_id">Исходное значение свойства prosedure_id.</param>
        /// <param name="name_process">Исходное значение свойства Name_process.</param>
        /// <param name="name_procedure">Исходное значение свойства Name_procedure.</param>
        /// <param name="type_procedure">Исходное значение свойства Type_procedure.</param>
        /// <param name="calculated_Time">Исходное значение свойства Calculated_Time.</param>
        public static ModelingProcedures CreateModelingProcedures(global::System.Int32 prosedure_id, global::System.String name_process, global::System.String name_procedure, global::System.String type_procedure, global::System.String calculated_Time)
        {
            ModelingProcedures modelingProcedures = new ModelingProcedures();
            modelingProcedures.prosedure_id = prosedure_id;
            modelingProcedures.Name_process = name_process;
            modelingProcedures.Name_procedure = name_procedure;
            modelingProcedures.Type_procedure = type_procedure;
            modelingProcedures.Calculated_Time = calculated_Time;
            return modelingProcedures;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 prosedure_id
        {
            get
            {
                return _prosedure_id;
            }
            set
            {
                if (_prosedure_id != value)
                {
                    Onprosedure_idChanging(value);
                    ReportPropertyChanging("prosedure_id");
                    _prosedure_id = StructuralObject.SetValidValue(value, "prosedure_id");
                    ReportPropertyChanged("prosedure_id");
                    Onprosedure_idChanged();
                }
            }
        }
        private global::System.Int32 _prosedure_id;
        partial void Onprosedure_idChanging(global::System.Int32 value);
        partial void Onprosedure_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_process
        {
            get
            {
                return _Name_process;
            }
            set
            {
                OnName_processChanging(value);
                ReportPropertyChanging("Name_process");
                _Name_process = StructuralObject.SetValidValue(value, false, "Name_process");
                ReportPropertyChanged("Name_process");
                OnName_processChanged();
            }
        }
        private global::System.String _Name_process;
        partial void OnName_processChanging(global::System.String value);
        partial void OnName_processChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_procedure
        {
            get
            {
                return _Name_procedure;
            }
            set
            {
                OnName_procedureChanging(value);
                ReportPropertyChanging("Name_procedure");
                _Name_procedure = StructuralObject.SetValidValue(value, false, "Name_procedure");
                ReportPropertyChanged("Name_procedure");
                OnName_procedureChanged();
            }
        }
        private global::System.String _Name_procedure;
        partial void OnName_procedureChanging(global::System.String value);
        partial void OnName_procedureChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type_procedure
        {
            get
            {
                return _Type_procedure;
            }
            set
            {
                OnType_procedureChanging(value);
                ReportPropertyChanging("Type_procedure");
                _Type_procedure = StructuralObject.SetValidValue(value, false, "Type_procedure");
                ReportPropertyChanged("Type_procedure");
                OnType_procedureChanged();
            }
        }
        private global::System.String _Type_procedure;
        partial void OnType_procedureChanging(global::System.String value);
        partial void OnType_procedureChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Calculated_Time
        {
            get
            {
                return _Calculated_Time;
            }
            set
            {
                OnCalculated_TimeChanging(value);
                ReportPropertyChanging("Calculated_Time");
                _Calculated_Time = StructuralObject.SetValidValue(value, false, "Calculated_Time");
                ReportPropertyChanged("Calculated_Time");
                OnCalculated_TimeChanged();
            }
        }
        private global::System.String _Calculated_Time;
        partial void OnCalculated_TimeChanging(global::System.String value);
        partial void OnCalculated_TimeChanged();

        #endregion

    }

    #endregion

}
